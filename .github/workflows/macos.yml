name: macos_build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 30 * *'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macOS-11
    env:
      OS_NAME: "osx"
      VSCODE_ARCH: "arm64"
    steps:
      - uses: actions/checkout@v2
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          
      - name: Check PR or cron
        run: |
          . check_cron_or_pr.sh

      - name: Clone VSCode repo
        run: |
          . get_repo.sh

      - name: Check existing VSCodium tags/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          . check_tags.sh
        if: env.SHOULD_DEPLOY == 'yes'

      - name: Compute cache key
        id: yarnCacheKey
        run: echo "::set-output name=value::$(node build/azure-pipelines/computeYarnCacheKey.js)"
        if: env.SHOULD_BUILD == 'yes'

      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        run: echo "::set-output name=dir::$(yarn cache dir)"
        if: env.SHOULD_BUILD == 'yes'

      - name: Cache yarn directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ env.OS_NAME }}-${{ env.VSCODE_ARCH }}-yarnCacheDir-${{ steps.yarnCacheKey.outputs.value }}
          restore-keys: ${{ env.OS_NAME }}-${{ env.VSCODE_ARCH }}-yarnCacheDir-
        if: env.SHOULD_BUILD == 'yes'

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./build.sh
        if: env.SHOULD_BUILD == 'yes'


      - name: Zip release
        run: |
          cd "VSCode-darwin-${VSCODE_ARCH}"
          zip -r -X -y ../VSCodium-darwin-${VSCODE_ARCH}-${MS_TAG}.zip ./*.app
        if: env.SHOULD_BUILD == 'yes' && env.SHOULD_DEPLOY == 'yes'

      
      - name: Release
        uses: softprops/action-gh-release@v1
        if: env.SHOULD_BUILD == 'yes' && env.SHOULD_DEPLOY == 'yes'
        with:
          tag_name: ${{ env.MS_TAG }}
          files: |
            ./*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update versions repo
        if: env.SHOULD_BUILD == 'yes' && env.SHOULD_DEPLOY == 'yes'
        run: ./update_version.sh
        env:
          GITHUB_TOKEN: ${{ secrets.STRONGER_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
